@page "/{page:int}"

@using DevNews.Core.UseCases
@using DevNews.Core.Dto
@inject GetArticles _articles;

<h1>DevNews Feed</h1>

@if (articles == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
    <ul class="list-unstyled">
        @foreach (var (title, content, link) in articles)
        {
            <li class="media">
                <div class="media-body">
                    <h5 class="mt-0 mb-1"><a href="@link">@title</a></h5>
                    <p>@content</p>
                </div>
            </li>
        }
    </ul>
    
    <nav aria-label="...">
        <ul class="pagination">
            <li class="page-item disabled">
                <a class="page-link" href="#" tabindex="-1" aria-disabled="true">Previous</a>
            </li>
            <li class="page-item"><a class="page-link" href="#">1</a></li>
            <li class="page-item active" aria-current="page">
                <a class="page-link" href="#">2</a>
            </li>
            <li class="page-item"><a class="page-link" href="#">3</a></li>
            <li class="page-item">
                <a class="page-link" href="#">Next</a>
            </li>
        </ul>
    </nav>
}

@code {
    private List<ArticleDto> articles;
    
    [Parameter]
    public int? Page { get; set; }= 1;
    
    protected override void OnParametersSet()
    {
        Page ??= 1;
    }
    protected override async Task OnInitializedAsync()
    {
        var page = Page ?? 1;
        articles = await _articles.Execute(new GetArticlesQuery(page, 10));
    }

}

